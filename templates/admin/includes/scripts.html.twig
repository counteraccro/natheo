
<script>
    /**
     * Script JS pour détecter tout changement dans un formulaire
     */
    "use strict";
    (() => {
        let checkConfirm = '{{ get_option_system_value_by_key(constant('App\\Utils\\Options\\OptionSystemKey::OS_CONFIRM_LEAVE_FORM'))}}';
        if(checkConfirm === '0')
        {
            return false;
        }

        function inArray(needle, haystack) {
            const length = haystack.length;
            for(let i = 0; i < length; i++) {
                if(haystack[i] === needle) return true;
            }
            return false;
        }

        // Class exclus du control
        const classExclude = 'no-control'
        const modified_inputs = new Set;
        const defaultValue = "defaultValue";

        // Stock des valeurs par défaut
        addEventListener("beforeinput", (evt) => {
            const target = evt.target;
            if (!(defaultValue in target || defaultValue in target.dataset)) {
                target.dataset[defaultValue] = ("" + (target.value || target.textContent)).trim();
            }
        });
        // détection modification
        addEventListener("input", (evt) => {
            const target = evt.target;

            if(inArray(classExclude, target.classList))
            {
                return false;
            }

            let original;
            if (defaultValue in target) {
                original = target[defaultValue];
            } else {
                original = target.dataset[defaultValue];
            }
            if (original !== ("" + (target.value || target.textContent)).trim()) {
                if (!modified_inputs.has(target)) {
                    modified_inputs.add(target);
                }
            } else if (modified_inputs.has(target)) {
                modified_inputs.delete(target);
            }
        });

        // Cas submit, on clean tout
        addEventListener("submit", (evt) => {
            modified_inputs.clear();
            // to prevent the warning from happening, it is advisable
            // that you clear your form controls back to their default
            // state with evt.target.reset() or form.reset() after submission
        });

        // Changement du message
        addEventListener("beforeunload", (evt) => {
            if (modified_inputs.size) {
                evt.returnValue = "Changes you made may not be saved.";
                return evt;
            }
        });
    })();
</script>