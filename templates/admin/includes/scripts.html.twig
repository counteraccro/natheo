
<!-- <div {{ vue_component('Admin/CheckConfirm', {
    'option' : get_option_system_value_by_key(constant('App\\Utils\\System\\Options\\OptionSystemKey::OS_CONFIRM_LEAVE_FORM')),
    'translate' : {
        'titre' : 'message.global.modal.confirm.titre' | trans,
        'corps' : 'message.global.modal.confirm.corps' | trans,
        'oui' : 'message.global.modal.confirm.oui' | trans,
        'non' : 'message.global.modal.confirm.non' | trans

    }
}) }}></div> -->


<script>
    // ============================================
    // GESTION DES SOUS-MENUS
    // ============================================
    function toggleSubmenu(id) {
        const submenu = document.getElementById('submenu-' + id);
        const chevron = document.getElementById('chevron-' + id);

        submenu.classList.toggle('open');
        chevron.classList.toggle('rotate');
    }

    // ============================================
    // GESTION DE LA SIDEBAR MOBILE
    // ============================================
    function toggleMobileSidebar() {
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('sidebarOverlay');

        sidebar.classList.toggle('open');
        overlay.classList.toggle('show');
    }

    // Fermer la sidebar au clic sur un lien (mobile)
    document.querySelectorAll('.sidebar-item').forEach(item => {
        item.addEventListener('click', function(e) {
            if (window.innerWidth < 1024 && !this.hasAttribute('onclick')) {
                toggleMobileSidebar();
            }
        });
    });

    // ============================================
    // GESTION DES THÈMES DE COULEURS
    // ============================================
    function setTheme(theme) {
        const root = document.documentElement;

        // Supprimer l'ancien thème
        root.removeAttribute('data-theme');

        // Ajouter le nouveau thème si ce n'est pas violet (par défaut)
        if (theme !== 'violet') {
            root.setAttribute('data-theme', theme);
        }

        // Mettre à jour les boutons actifs
        document.querySelectorAll('.theme-btn').forEach(btn => {
            btn.classList.remove('active');
        });
        document.querySelector(`.theme-${theme}`).classList.add('active');

        // Sauvegarder dans localStorage
        localStorage.setItem('theme', theme);
    }

    // ============================================
    // GESTION DU MODE SOMBRE
    // ============================================
    function toggleDarkMode() {
        const root = document.documentElement;
        const toggle = document.getElementById('darkToggle');
        const isDark = root.getAttribute('data-theme-mode') === 'dark';

        if (isDark) {
            root.removeAttribute('data-theme-mode');
            toggle.classList.remove('active');
            localStorage.setItem('darkMode', 'light');
        } else {
            root.setAttribute('data-theme-mode', 'dark');
            toggle.classList.add('active');
            localStorage.setItem('darkMode', 'dark');
        }
    }

    // ============================================
    // RESTAURER LES PRÉFÉRENCES AU CHARGEMENT
    // ============================================
    window.addEventListener('DOMContentLoaded', () => {
        const savedTheme = localStorage.getItem('theme') || 'violet';
        const savedDarkMode = localStorage.getItem('darkMode') || 'light';

        // Restaurer le thème de couleur
        if (savedTheme !== 'violet') {
            document.documentElement.setAttribute('data-theme', savedTheme);
        }

        // Mettre à jour le bouton de thème actif
        document.querySelectorAll('.theme-btn').forEach(btn => {
            btn.classList.remove('active');
        });
        const activeThemeBtn = document.querySelector(`.theme-${savedTheme}`);
        if (activeThemeBtn) {
            activeThemeBtn.classList.add('active');
        }

        // Restaurer le mode sombre
        if (savedDarkMode === 'dark') {
            document.documentElement.setAttribute('data-theme-mode', 'dark');
            document.getElementById('darkToggle').classList.add('active');
        }
    });

    // ============================================
    // GESTION DE LA DEBUG TOOLBAR
    // ============================================
    function toggleDebugToolbar() {
        const toolbar = document.getElementById('debugToolbar');
        toolbar.classList.toggle('minimized');
    }

    // Fermer le debug panel au clic extérieur
    document.addEventListener('click', function(event) {
        const toolbar = document.getElementById('debugToolbar');
        const panel = toolbar.querySelector('.debug-toolbar-panel');
        const toggle = toolbar.querySelector('.debug-toolbar-toggle');

        if (!toolbar.classList.contains('minimized') &&
            !panel.contains(event.target) &&
            !toggle.contains(event.target)) {
            toolbar.classList.add('minimized');
        }
    });
</script>